<<<<<<< HEAD
---
version: '3.4'

services:
  verba:
    build:
      context: ./
      dockerfile: Dockerfile
    ports:
      - 8000:8000
    environment:
      - WEAVIATE_URL_VERBA=http://weaviate:8080
      - OPENAI_API_KEY=$OPENAI_API_KEY
      - COHERE_API_KEY=$COHERE_API_KEY
      - OLLAMA_URL=http://host.docker.internal:11434
      - OLLAMA_MODEL=$OLLAMA_MODEL
      - OLLAMA_EMBED_MODEL=$OLLAMA_EMBED_MODEL
      - UNSTRUCTURED_API_KEY=$UNSTRUCTURED_API_KEY
      - UNSTRUCTURED_API_URL=$UNSTRUCTURED_API_URL
      - GITHUB_TOKEN=$GITHUB_TOKEN
      ## IF YOU WANT AUTHENTICATION, UNCOMENT BELLOW 
      ## AND ADD WEAVIATE SERVICE
      #- WEAVIATE_API_KEY_VERBA=adminkey

    volumes:
      - ./data:/data/
    depends_on:
      weaviate:
        condition: service_healthy
    healthcheck:
      test: wget --no-verbose --tries=3 --spider http://localhost:8000 || exit 1
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 10s

  weaviate:
    command:
      - --host
      - 0.0.0.0
      - --port
      - '8080'
      - --scheme
      - http
    image: semitechnologies/weaviate:1.24.2
    ports:
      - 8080:8080
      - 3000:8080
    volumes:
      - weaviate_data:/var/lib/weaviate
    restart: on-failure:0
    healthcheck:
      test: wget --no-verbose --tries=3 --spider http://localhost:8080/v1/.well-known/ready || exit 1
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 10s
    environment:
      OPENAI_APIKEY: $OPENAI_API_KEY
      COHERE_APIKEY: $COHERE_API_KEY
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      ENABLE_MODULES: 'text2vec-openai, generative-openai, qna-openai, text2vec-cohere'
      CLUSTER_HOSTNAME: 'node1'
      #######IF YOU WANT AUTHENTICATION UNCOMMENT BELOW########
      # AUTHENTICATION_APIKEY_ENABLED: 'true'
      # AUTHENTICATION_APIKEY_ALLOWED_KEYS: 'readonlykey,adminkey'
      # AUTHENTICATION_APIKEY_USERS: 'jane@doe.com,john@doe.com'
      # AUTHORIZATION_ADMINLIST_ENABLED: 'true'
      # AUTHORIZATION_ADMINLIST_USERS: 'john@doe.com'
      # AUTHORIZATION_ADMINLIST_READONLY_USERS: 'jane@doe.com'

volumes:
  weaviate_data: {}
...
=======
version: "3.2"

services:

  mindsdb:
    image: mindsdb/mindsdb:devel
    # If you want to build the image instead:
    # build:
    #   context: .
    #   dockerfile: docker/mindsdb.Dockerfile
    #   target: dev  # Makes sure dev dependencies are installed
    restart: always
    ports:
      - '47334:47334'
      - '47335:47335'
      - '47336:47336'
    # watchfiles will reload the app when python files are changed
    command: bash -c "watchfiles --filter python 'python -m mindsdb' ."
    environment:
      MINDSDB_DOCKER_ENV: "True"
      MINDSDB_STORAGE_DIR: "/mindsdb/var"
      FLASK_DEBUG: 1  # This will make sure http requests are logged regardless of log level
      # MINDSDB_LOG_LEVEL: "DEBUG"
      # OPENAI_API_KEY: "..."
    volumes:
      - type: bind
        source: .
        target: /mindsdb
    healthcheck:
      test:  ["CMD", "curl", "-f", "http://localhost:47334/api/util/ping"]
      interval: 30s
      timeout: 4s
      retries: 100
>>>>>>> upstream/main
